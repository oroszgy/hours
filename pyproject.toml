[tool.poetry]
name = "hours"
version = "0.3.1"
description = "Log working hours"
authors = ["Gyorgy Orosz <gyorgy@orosz.link>"]
maintainers = ["Gy√∂rgy Orosz <gyorgy@orosz.link>"]
license = "MIT"
readme = "README.md"
classifiers = [
    'Development Status :: 3 - Alpha',
    'Intended Audience :: Developers',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
]
packages = [
    { include = "hours"},
]

[tool.poetry.dependencies]
python = ">=3.8,<3.13"
rich = "^13.7.0"
typer = "^0.9.0"
xlsxwriter = "^3.1.9"
sqlmodel = "~0.0.14"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^23.11.0"
ruff = "^0.1.6"
pytest = "^7.4.3"
coverage = "^7.3.2"
bump2version = "^1.0.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-typer = "^0.0.3"
mkdocs-material = "^9.4.14"

[tool.poetry.scripts]
hours = "hours.cli:app"

[tool.black]
skip-string-normalization = true
line-length = 120

[tool.ruff]
# Same as Black.
line-length = 120
cache-dir = ".cache/ruff"

select = [
    "E",  # pycodestyle errors (settings from FastAPI, thanks, @tiangolo!)
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
    "B008",  # too complex
]

[tool.ruff.isort]
order-by-type = true
relative-imports-order = "closest-to-furthest"
extra-standard-library = ["typing"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = []

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-s -v --durations=0 -m 'not slow'"
cache_dir = ".cache/pytest"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
